name: build container images
on:
  workflow_dispatch:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - main
      - develop

env:
  REGISTRY: quay.io
  REGISTRY_USER: ${{ secrets.QUAY_USERNAME }}
  REGISTRY_TOKEN: ${{ secrets.QUAY_TOKEN }}

  REGISTRY_ORG: quay.io/rhadp

jobs:
  build-image:
    strategy:
      matrix:
        include:
          - name: builder
            runs-on:
              group: aib-runners
              labels: [self-hosted, Linux, ARM64, aib]
          #- runs-on: ubuntu-latest
          #  name: codespaces

    runs-on: ${{ matrix.runs-on }}
    permissions:
      packages: write
      contents: read
      id-token: write
      attestations: write

    steps:
      - name: checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: get version
        run: |
          # check if there are any tags, if not use a default version
          if git describe --tags --exact-match HEAD 2>/dev/null; then
            VERSION=$(git describe --tags --exact-match HEAD)
          elif git describe --tags 2>/dev/null; then
            VERSION=$(git describe --tags)
          else
            VERSION="$(git rev-parse --short HEAD)"
          fi
          VERSION=${VERSION#v} # remove the leading v prefix for version
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "VERSION=${VERSION}"

      - name: set image tags
        id: set-tags
        run: |
          TAGS="${{ env.REGISTRY_ORG }}/${{ matrix.name }}:${{ env.VERSION }}"

          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            TAGS="$TAGS ${{ env.REGISTRY_ORG }}/${{ matrix.name }}:latest"
          fi

          if [[ "${{ github.ref }}" == refs/heads/release-* ]]; then
            RELEASE_BRANCH_NAME=$(basename "${{ github.ref }}")
            TAGS="$TAGS ${{ env.REGISTRY_ORG }}/${{ matrix.name }}:${RELEASE_BRANCH_NAME}"
          fi

          echo "tags=$TAGS" >> $GITHUB_OUTPUT

      - name: login to the registry
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_TOKEN }}
          
      - name: build the container
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.REGISTRY_ORG }}/${{ matrix.name }}
          context: "containers/${{ matrix.name }}"
          tags: ${{ steps.set-tags.outputs.tags }}
          containerfiles: "containers/${{ matrix.name }}/Containerfile"
          layers: true
          archs: arm64

      - name: push to registry
        id: push
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ env.REGISTRY_ORG }}/${{ matrix.name }}
          tags: ${{ steps.set-tags.outputs.tags }}
          registry: ${{ env.REGISTRY }}
          #username: ${{ env.REGISTRY_USER }}
          #password: ${{ env.REGISTRY_TOKEN }}
          
      - name: generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY_ORG }}/${{ matrix.name }}
          subject-digest: ${{ steps.push.outputs.digest }}
          #push-to-registry: true

      #  uses: docker/login-action@v3
      #  with:
      #  registry: ${{ env.REGISTRY }}
      #  username: ${{ env.REGISTRY_USER }}
      #  password: ${{ env.REGISTRY_TOKEN }}

      #- name: setup buildx
      #  uses: docker/setup-buildx-action@v3

      #- id: metadata
      #  uses: docker/metadata-action@v5
      #  with:
      #    images: ${{ env.REGISTRY_ORG }}/${{ matrix.name }}

      #- name: build and push
      #  id: push
      #  uses: docker/build-push-action@v6
      #  with:
      #    context: "containers/${{ matrix.name }}"
      #    file: "containers/${{ matrix.name }}/Containerfile"
      #    tags: ${{ steps.set-tags.outputs.tags }}
      #    labels: ${{ steps.metadata.outputs.labels }}
      #    platforms: linux/amd64,linux/arm64
      #    cache-from: type=gha
      #    cache-to: type=gha,mode=max
      #    push: true

